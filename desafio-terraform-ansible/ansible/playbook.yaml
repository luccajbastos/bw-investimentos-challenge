- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    aws_region: us-east-1 # Alterar aqui após o Apply
    eks_cluster_name: bwgi-dev-us-east-1-eks # Alterar aqui após o Apply
    airflow_namespace: airflow
    alb_subnets: "subnet-0c8d5b135af8e7d77,subnet-0c13bc3914d51adfc" # Alterar aqui após o Apply
  tasks:

    - name: Update kubeconfig for EKS
      ansible.builtin.command: >
        aws eks update-kubeconfig
        --name {{ eks_cluster_name }}
        --region {{ aws_region }}
      changed_when: false

    - name: Add Airflow Helm Repository
      kubernetes.core.helm_repository:
        repo_name: airflow-helm
        repo_url: https://airflow-helm.github.io/charts

    - name: Deploy Airflow via Helm
      kubernetes.core.helm:
        name: airflow
        chart_ref: airflow-helm/airflow
        release_namespace: "{{ airflow_namespace }}"
        create_namespace: true
        atomic: true
        values:
          logs:
            ## the airflow logs folder
            # path: /opt/airflow/logs
            persistence:
              enabled: false
          airflow:
            image:
              repository: apache/airflow
              tag: 2.10.5-python3.9
          dags:
            persistence:
              enabled: false
          postgresql:
            enabled: true
            persistence:
              enabled: false
              storageClass: ""
          redis:
            enabled: true
            persistence:
              enabled: false

    - name: Create a Kubernetes Ingress
      kubernetes.core.k8s:
        state: present
        apply: yes
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: airflow-ingress 
            namespace: "{{ airflow_namespace }}"
            annotations:
              kubernetes.io/ingress.class: alb
              alb.ingress.kubernetes.io/scheme: internet-facing
              alb.ingress.kubernetes.io/load-balancer-name: airflow-alb
              alb.ingress.kubernetes.io/target-type: ip
              alb.ingress.kubernetes.io/group.name: airflow
              alb.ingress.kubernetes.io/group.order: '1'
              alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
              alb.ingress.kubernetes.io/subnets: '{{ alb_subnets }}'
              alb.ingress.kubernetes.io/security-groups: ''
              alb.ingress.kubernetes.io/healthcheck-path: '/health'
              alb.ingress.kubernetes.io/healthcheck-protocol: 'HTTP'
              alb.ingress.kubernetes.io/healthcheck-port: '8080'
          spec:
            defaultBackend:
              service:
                name: airflow-web
                port:
                  number: 8080
